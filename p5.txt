 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura?
        954 paquetes.
 ** ¿Cuánto tiempo dura la captura?
        56.149345 seg
 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
        La captura se habrá hecho en 192.168.1.34 o en un router NAT de esta y la direccion ip es privada, lo sabemos por el rango de direccion.

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
        UDP es mayor 96.23% y TCP es 2.10%. Yo creo que si es consistente.
 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
        Los protocolos que podemos ver son dentro de TCP->HTTP,ICMP y dentro de UDP-> ARP, SIP, RTP, RTCP, TCP, DNA

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
        Más o menos se envian en franjas de tiempo de los segundos 6 al 8, del 13 al 16, del 16 al 18, del 37 al 40 y por último del 54 al 57
 ** Y los paquetes con RTP, ¿cuándo se envían?
        RTP se envian en la franja de tiempo de los segundos 16 al 40 mas o menos.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
        A ekiga.net
 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
        80.58.61.250
 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
        86.64.162.35
 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
        Porque quiere saber el dominio por defecto   de esa direccion pero en orden inverso que seria 86.64.162.35.

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
       Se pide http://ekiga.net/ip/
 ** ¿Qué user agent (UA) la está pidiendo?
        UA Ekiga
 ** ¿Qué devuelve el servidor?
        Devuelve ip publica de 83.36.48.212
 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
        Recibimos 193.147.49.108. Nos da la ip publica el Servidor

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
        Es un protocolo de tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública, el tipo de NAT en el que se encuentra y el puerto de Internet asociado con el puerto local a través de NAT. Esta información es usada para configurar una comunicación UDP entre dos hosts que se encuentren tras enrutadores NAT.
 ** ¿Estamos tras un NAT? 
        Si, donde tenemos una direecion publica 83.36.48.212


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 ** ¿Qué dirección IP tiene el servidor Registrar?
        86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
        5060
 ** ¿Qué método SIP utiliza el UA para registrarse?
        Ekiga/2.0.3
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
        Entiende, INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
        No
 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
        Nos manda una trama con "Status: 401 Unauthorized " no estamos autorizados
 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
        Debemos mandarle mas información para asegurar la conexion en Authorization con informacion de Authorization scheme:Disgestive, el Nonce Value , Authenticacion URI, algorithm, Digest AUthentication Response.
 ** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
        3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
        Si puede verse el nombre. Nombre= Gregorio Robles, direccion SIP= grex@ekiga.net
 ** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
        El cuerpo de la trama contiene un mensaje SDP, enta dentro de un protocolo SIP
 ** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
        No tiene exito el intento ya que recibimos un 407 Proxy Authentication Required 
 ** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
        El segundo introduce mas informacion con un Proxy-Authorization, como Digest realm, nonce. Que se lo ha pedido anteriormente el proxy para que el invite tuviera exito     


11. Una vez conectado, estudia el intercambio de tramas.
 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirve1037n estos protocolos?
        Utilizan protocolos RTP, para transmision multimedia en tiempo real  y H-261 para el video 
 ** ¿Cuál es el tamaño de paquete de los mismos?
        Paquetes RTP son de 214 bytes y los de H-261 es mas variable (1028,1073,,1077)bytes
 ** ¿Se utilizan bits de padding?
        No, en el campo padding de los mensajes nos sale como False
 ** ¿Cuál es la periodicidad de los paquetes que se envían?
        Vemos que se envian cada 20 microseg
 ** ¿Cuántos bits/segundo estamos enviando?
        214 bytes le quitamos las cabeceras 54bytes,tenemos 160bytes, 8000bytes por segundo por tanto 64000bits/seg

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
        Hay dos flujos, para dos puertos diferentes 5014, uno sera para video y 5010, otro para audio.
 ** ¿Cuántos paquetes se pierden?
        Ningun paquete se ha perdido
 ** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
        El valor de la delta es de 1290.48ms dirigido al puerto (5014). Es el máximo retardo de los paquetes
 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
        Para el puerto (5014) el valor del jitter es de 183.10 Max, 153.24 Mean y para el puerto (5010) 119.64Max y 42.50Mean
        No es una conversacion de calidad ya que los valores jitter tiene demasiada variación y la diferencia de retardos es mucha

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
        Delta y jitter valen 0
 ** ¿Podemos saber si éste es el primer paquete que nos han enviado?
        En ekiga si podemos saber cual es el primer paquete enviado ya que pone una marca. Si no fuera con ekiga no lo podriamos saber.
 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
        Hasta el paquete 247.
 ** ¿A qué se debe el cambio tan brusco del jitter?
        Supongo que se debe a que la delta se ingrementa mucho, por tanto el retardo es mayor y el jitter aumenta
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
        Si ya que como he dicho antes el jitter y la delta estan relacionados y la delta es el retardo de los paquetes
 ** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
        La dependencia eltre el valor anterior y el jitter no es exactamente lo que tarda sino que es un poco menos pero, es como si el jitter tiene memoria que guarda los jitter anteriores y lo va sumando...

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación?
        Empezo 14.426793  y termino 39.229683 por tanto duro 24.80289 segundos
 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
        Tiene dos SSRC según sea de video o audio son diferentes y no encontramos ningun CSRCw

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
        Sip, utiliza el metodo BYE
 ** ¿En qué trama(s)?
        Las tramas son (924,925,927,933)
 ** ¿Por qué crees que se envía varias veces?
        Porque el 200 ok no le ha llegado.

16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
        Porque la conexion se cierra con un REGISTER con el campo Expires a 0
 ** ¿En qué trama sucede esto?
        En la trama 950, en el primer REGISTER que encontramos, tras toda la conversación
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
        En el Expire que en los primeros Register cuando queriamos entrar a la conversacion iban con 3600 y ahora esta a 0 para terminar la conversacion.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
        DNS lo utilizamos para coger el nombre y en este caso no tenemos, posiblemente lo tuvieramos guardado en la cache con anterioridad en ekiga.
        No es necesario STUN ya que seria para redes privadas y esta es publica por tanto al no estar detras de un NAT tampoco usamos este protocolo.
        
 ** ¿Son diferentes el registro y la descripción de la sesión?
        El registro es muy parecido en las dos capturas. 


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
        Tambien tenemos dos flujos, ya que es una conversación
 ** ¿Cuál es su periodicidad?
        Cada 0.2ms mas o menos
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
        El valor máximo de la delta 41.60ms y valores medio de jitter es 3.58 y el maximo 5.34 en el flujo uno para el puerto 30700
        El valor máximo de la delta 30.39ms y valores medio de jitter es 3.49 y el maximo 5.01 en el flujo uno para el puerto 30700
      
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
       Si podiamos reproducir la conversación. Entramos en telephony->RTP->show all Streams->selecionamos el flujo->Analyze-> Player
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?
        Nos ofrece un servicio de música.


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
